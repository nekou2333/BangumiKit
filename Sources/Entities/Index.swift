// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct Index: Codable {
    public var id: Int
    public var title: String
    public var desc: String
    /// 收录条目总数
    public var total: Int?
    /// 目录评论及收藏数
    public var stat: Stat
    public var createdAt: Date
    public var updatedAt: Date
    /// 意义同<a href="#model-Me">Me</a>
    public var creator: Creator
    /// Ban
    ///
    /// Deprecated, always false.
    ///
    /// - warning: Deprecated.
    public var isBan: Bool
    /// 目录是否包括 nsfw 条目
    public var isNsfw: Bool

    public init(
        id: Int,
        title: String,
        desc: String,
        total: Int? = nil,
        stat: Stat,
        createdAt: Date,
        updatedAt: Date,
        creator: Creator,
        isBan: Bool,
        isNsfw: Bool
    ) {
        self.id = id
        self.title = title
        self.desc = desc
        self.total = total
        self.stat = stat
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.creator = creator
        self.isBan = isBan
        self.isNsfw = isNsfw
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(Int.self, forKey: "id")
        self.title = try values.decode(String.self, forKey: "title")
        self.desc = try values.decode(String.self, forKey: "desc")
        self.total = try values.decodeIfPresent(Int.self, forKey: "total")
        self.stat = try values.decode(Stat.self, forKey: "stat")
        self.createdAt = try values.decode(Date.self, forKey: "created_at")
        self.updatedAt = try values.decode(Date.self, forKey: "updated_at")
        self.creator = try values.decode(Creator.self, forKey: "creator")
        self.isBan = try values.decode(Bool.self, forKey: "ban")
        self.isNsfw = try values.decode(Bool.self, forKey: "nsfw")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(title, forKey: "title")
        try values.encode(desc, forKey: "desc")
        try values.encodeIfPresent(total, forKey: "total")
        try values.encode(stat, forKey: "stat")
        try values.encode(createdAt, forKey: "created_at")
        try values.encode(updatedAt, forKey: "updated_at")
        try values.encode(creator, forKey: "creator")
        try values.encode(isBan, forKey: "ban")
        try values.encode(isNsfw, forKey: "nsfw")
    }
}
