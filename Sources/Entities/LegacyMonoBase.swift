// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// 人物（基础模型）
public struct LegacyMonoBase: Codable {
    /// 人物 ID
    public var id: Int?
    /// 人物地址
    public var url: String?
    /// 姓名
    public var name: String?
    /// 肖像
    public var images: Images?

    /// 肖像
    public struct Images: Codable {
        /// Example: "https://lain.bgm.tv/pic/crt/l/ce/65/32_crt_XMJOj.jpg"
        public var large: String?
        /// Example: "https://lain.bgm.tv/pic/crt/m/ce/65/32_crt_XMJOj.jpg"
        public var medium: String?
        /// Example: "https://lain.bgm.tv/pic/crt/s/ce/65/32_crt_XMJOj.jpg"
        public var small: String?
        /// Example: "https://lain.bgm.tv/pic/crt/g/ce/65/32_crt_XMJOj.jpg"
        public var grid: String?

        public init(large: String? = nil, medium: String? = nil, small: String? = nil, grid: String? = nil) {
            self.large = large
            self.medium = medium
            self.small = small
            self.grid = grid
        }

        public init(from decoder: Decoder) throws {
            let values = try decoder.container(keyedBy: StringCodingKey.self)
            self.large = try values.decodeIfPresent(String.self, forKey: "large")
            self.medium = try values.decodeIfPresent(String.self, forKey: "medium")
            self.small = try values.decodeIfPresent(String.self, forKey: "small")
            self.grid = try values.decodeIfPresent(String.self, forKey: "grid")
        }

        public func encode(to encoder: Encoder) throws {
            var values = encoder.container(keyedBy: StringCodingKey.self)
            try values.encodeIfPresent(large, forKey: "large")
            try values.encodeIfPresent(medium, forKey: "medium")
            try values.encodeIfPresent(small, forKey: "small")
            try values.encodeIfPresent(grid, forKey: "grid")
        }
    }

    public init(id: Int? = nil, url: String? = nil, name: String? = nil, images: Images? = nil) {
        self.id = id
        self.url = url
        self.name = name
        self.images = images
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(Int.self, forKey: "id")
        self.url = try values.decodeIfPresent(String.self, forKey: "url")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.images = try values.decodeIfPresent(Images.self, forKey: "images")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(url, forKey: "url")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(images, forKey: "images")
    }
}
